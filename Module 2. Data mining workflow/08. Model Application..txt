Goals are business needs
## The essence of model deployment-return to business
1. How to save the model
2. How to optimize according to business
3. How to launch the service

1. How to save the model (standards must be formulated to prevent unnecessary losses such as forgetting and deletion)
storage location. Definition of name. The algorithm used by the model. parameter. data. Effects etc.

2. How to optimize according to business
The goal pursued during the training phase optimization: to achieve as good an effect as possible
The goal pursued in the application stage optimization: to adapt to the limitations of the application without reducing the effect.
like:
- When the time is high, you need to consider reducing the model complexity or upgrading the hardware to increase the speed.
- When the model size is high (for example, if face recognition is integrated into the chip, the dimensionality of the model parameters needs to be reduced, etc.)
- Offline application or online operation

Large-scale parallel online deployment solution:
1. flask web framework
2. Gunicorn http service, running on linux server
3. Nginx load balancing L can be used as a load balancer to prevent overload. Is a client-facing entity that distributes requirements to servers
4. Client: trigger the recommendation algorithm by pulling down

Record project managers and learn to summarize and reflect
- Including: from demand initiation, to data preparation, to model training. Evaluate. When going online, what problems were encountered in these links, what problems were solved, and what problems were not solved. If there is still a chance, how will it be optimized?
Help yourself grow faster by updating documents to help you refer to them during project iterations.

Think more about how to fit more scenarios. Can it be made into a unified service and can it be used in more places?
Finally, a closed business loop is achieved without redundant development.

Iterate and monitor
In order for the model to work well, a monitoring strategy and plan are needed. Monitor model status and results.
- Result monitoring:
For example, in the recommendation system, whether the daily proportion is close to the initial data, automatic feedback can also be provided through the app, allowing users to choose the tags they do not like;
- Manual periodic review:
Same as above.
- case collection:
1. Find out what problems exist in the current model through specific cases;
2. The mobile phone has enough cases to be used as samples for retraining;
目标是业务需求
## 模型部署本质-回归业务
1. 模型如何保存
2. 如何根据业务优化
3. 如何上线服务

1. 模型如何保存（要制定好规范，防止发生遗忘删除等不必要的损失）
存放的位置。名字的定义。模型使用的算法。参数。数据。效果等

2. 如何根据业务优化
训练阶段优化追求的目标：效果尽量好
应用阶段优化追求的目标：效果尽力不降低的情况下，适配应用的限制。
如：
- 时间较高时，就要考虑降低模型复杂度还是提升硬件以提高速度
- 模型大小较高时（如将人脸识别集成于芯片，需要降低模型参数的维度等）
- 离线应用还是在线运行

大规模并行的线上部署方案：
1. flask web框架
2，Gunicorn http服务，运行于linux服务器
3. Nginx负载均衡L可以用作负载均衡器，防止过载。是面向客户端的实体，将需求分配到服务器
4. 客户端：如下拉触发推荐算法

记录项目经理，学会总结和反思
- 包括：从需求发起，到数据准备，再到模型训练。评估。上线，这些环节遇到了什么问题，解决了什么问题，有哪些问题没有解决。如果还有机会会如何优化
通过更新文档帮助项目迭代时查阅，帮助自己更快成长。

多考虑一点，如何适合更多场景。能不能做成统一的服务，能不能用在更多的地方。
最终实现业务闭环，而不需要冗余的开发。

迭代与监控
为了模型良好的效果，需要一套监控策略和计划。对模型状态监控，对结果监控
- 结果监控：
如推荐系统中，针对每天的占比情况于初始数据是否接近，也可以通过app自动反馈，让用户自己选择不喜欢的标签；
- 人工定期复审：
同上。
- case收集：
1. 通过具体的case找到当前模型存在哪些问题；
2. 手机足够case可以作为重新训练的样本；

